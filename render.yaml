# Use this Blueprint to deploy n8n on Render as a web
# service that uses a Postgres database to store
# workflow data.
#
# This Blueprint uses free instance types (specified by
# `plan`) for both the web service and the database. You
# can upgrade to paid instance types at any time to
# increase resources.

services:
  - type: web
    plan: free
    port: 5678  # Añade esta línea para vincular el puerto
    runtime: image
    name: n8n-service
    image:
      url: docker.io/n8nio/n8n:latest
    # All environment variables defined below are required!
    #
    # You can define additional environment variables as needed.
    envVars:
      # Generates a base64-encoded key for
      # encrypting credentials in n8n
      #
      # Do not modify this value after it's generated!
      # If you do, you'll lose access to all credentials
      # encrypted with the previous value.
      - key: N8N_ENCRYPTION_KEY
        generateValue: true

      # Configura manualmente los detalles de tu base de datos existente
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_DATABASE
        value: n8n_postgres_ys8g  # Nombre de tu base de datos existente
      - key: DB_POSTGRESDB_HOST
        value: dpg-d2t0uqnfte5s739otk30-a  # Host interno de tu DB (de la Internal Database URL)
      - key: DB_POSTGRESDB_PASSWORD
        value: 46tqndTzglqecmDCm2TiSshLn3iuZFrC  # Contraseña real de tu DB
      - key: DB_POSTGRESDB_USER
        value: mary  # Usuario de tu DB
      - key: DB_POSTGRESDB_PORT
        value: 5432  # Puerto estándar de PostgreSQL
      - key: DB_POSTGRESDB_SSLMODE
        value: require  # Forzar SSL para evitar errores SCRAM

      # Opcional: Configuración adicional para n8n
      - key: N8N_HOST
        value: n8n-service.onrender.com  # URL de tu servicio (ajusta después del deploy)
      - key: N8N_PORT
        value: 5678  # Puerto interno de n8n
      - key: WEBHOOK_URL
        value: https://n8n-service.onrender.com/  # Para webhooks (ajusta después del deploy)
